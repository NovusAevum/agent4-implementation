name: Deploy to Hugging Face

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  # Container registry settings
  HF_USERNAME: LetsTryGPY
  HF_SPACE: agent4-implementation
  HF_REGISTRY: registry.huggingface.co
  DOCKER_IMAGE: ${{ env.HF_REGISTRY }}/${{ env.HF_USERNAME }}/${{ env.HF_SPACE }}
  
  # Application settings
  PORT: 3000
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Debug environment
        run: |
          echo "HF_USERNAME: ${{ env.HF_USERNAME }}"
          echo "HF_SPACE: ${{ env.HF_SPACE }}"
          echo "DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}"
          echo "GITHUB_REPOSITORY: ${{ github.repository }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          driver-opts: network=host
      
      - name: Log in to Hugging Face Container Registry
        if: secrets.HF_TOKEN != ''
        uses: docker/login-action@v2
        with:
          registry: ${{ env.HF_REGISTRY }}
          username: ${{ env.HF_USERNAME }}
          password: ${{ secrets.HF_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}
            PORT=${{ env.PORT }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
      
      - name: Deploy to Hugging Face Space
        if: success() && secrets.HF_TOKEN != ''
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          echo "Triggering Hugging Face Space deployment..."
          curl -s -X POST \
            -H "Authorization: Bearer $HF_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"repository":"${{ github.repository }}", "revision":"${{ github.sha }}"}' \
            "https://huggingface.co/api/spaces/${{ env.HF_USERNAME }}/${{ env.HF_SPACE }}/redeploy"
          
          echo -e "\nüöÄ Deployment triggered!"
          echo "üåê Check your space: https://huggingface.co/spaces/${{ env.HF_USERNAME }}/${{ env.HF_SPACE }}"
      
      - name: Verify deployment
        if: always()
        run: |
          if [ "${{ job.status }}" != 'success' ]; then
            echo "‚ùå Deployment failed. Please check the logs above for errors."
            echo "\nCommon issues to check:"
            echo "1. Ensure HF_TOKEN secret is set in your repository secrets"
            echo "2. Verify your HF_TOKEN has write access to the space"
            echo "3. Check that the space exists: https://huggingface.co/spaces/${{ env.HF_USERNAME }}/${{ env.HF_SPACE }}"
            echo "4. Make sure your Dockerfile is correctly configured"
            exit 1
          fi

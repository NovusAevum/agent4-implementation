name: Reusable Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      huggingface_space:
        required: true
        type: string
    secrets:
      VERCEL_TOKEN:
        required: true
      VERCEL_ORG_ID:
        required: true
      VERCEL_PROJECT_ID:
        required: true
      HF_TOKEN:
        required: true

jobs:
  deploy-huggingface:
    name: Deploy to Hugging Face Spaces
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: org.opencontainers.image.source=${{ github.repositoryUrl }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Hugging Face CLI
        run: |
          pip install --upgrade huggingface_hub

      - name: Deploy to Hugging Face Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          huggingface-cli login --token $HF_TOKEN
          git clone https://huggingface.co/spaces/${{ inputs.huggingface_space }} hf-space
          cd hf-space
          cp -r ../Dockerfile ../huggingface.yaml ../package.json ../package-lock.json ../tsconfig.json ../dist ./
          git add .
          git commit -m "Deploy from GitHub Actions" || echo "No changes to commit"
          git push

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: vercel-deployment
          path: .
      - name: Download checksum
        uses: actions/download-artifact@v4
        with:
          name: vercel-checksum
          path: .
      - name: Verify checksum
        run: |
          cd dist
          sha256sum -c ../checksum.txt

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel --prod --confirm --token ${{ secrets.VERCEL_TOKEN }}

name: Deploy to Hugging Face Spaces

on:
  workflow_dispatch:

env:
  HF_SPACE: LetsTryGPT/agent4-implementation
  HF_TOKEN: ${{ secrets.HF_TOKEN }}
  HF_USERNAME: ${{ secrets.HF_USERNAME }}

jobs:
  deploy:
    name: Deploy to HF Spaces
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true
    
    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.10'
    
    - name: Install huggingface_hub
      run: |
        pip install huggingface_hub
    
    - name: Push to Hugging Face Space
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        git config --global user.email "wmh.dirc@gmail.com"
        git config --global user.name "LetsTryGPT"
        
        # Clone or create the space
        python << 'EOF'
        from huggingface_hub import HfApi, create_repo
        import os
        
        api = HfApi()
        token = os.environ.get('HF_TOKEN')
        space_id = "LetsTryGPT/agent4-implementation"
        
        try:
            # Try to create the space
            create_repo(
                repo_id=space_id,
                token=token,
                repo_type="space",
                space_sdk="docker",
                exist_ok=True
            )
            print(f"✅ Space {space_id} ready")
        except Exception as e:
            print(f"Space exists or error: {e}")
        
        # Upload all files
        try:
            api.upload_folder(
                folder_path=".",
                repo_id=space_id,
                repo_type="space",
                token=token,
                ignore_patterns=[".git/*", "node_modules/*", "dist/*", ".env"]
            )
            print(f"✅ Files uploaded to {space_id}")
        except Exception as e:
            print(f"❌ Upload error: {e}")
            exit(1)
        EOF
    
    - name: Set Space Variables
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        python << 'EOF'
        from huggingface_hub import HfApi
        import os
        
        api = HfApi()
        token = os.environ.get('HF_TOKEN')
        space_id = "LetsTryGPT/agent4-implementation"
        
        # Set environment variables
        variables = {
            'NODE_ENV': 'production',
            'PORT': '7860',
            'DEFAULT_LLM_PROVIDER': 'huggingface',
            'AGENT4_ENABLED': 'true'
        }
        
        for key, value in variables.items():
            try:
                api.add_space_variable(
                    repo_id=space_id,
                    key=key,
                    value=value,
                    token=token
                )
                print(f"✅ Set {key}")
            except Exception as e:
                print(f"⚠️  {key}: {e}")
        EOF
    
    - name: Verify Deployment
      run: |
        echo "✅ Deployment to Hugging Face Spaces complete!"
        echo "🔗 Space URL: https://huggingface.co/spaces/LetsTryGPT/agent4-implementation"
        echo "View your space at: https://huggingface.co/spaces/${{ env.HF_SPACE }}"
        
    - name: Update README with Space URL
      if: success()
      run: |
        SPACE_URL="https://huggingface.co/spaces/${{ env.HF_SPACE }}"
        echo "## 🚀 Live Demo" >> README.md
        echo "" >> README.md
        echo "The application is deployed to Hugging Face Spaces:" >> README.md
        echo "" >> README.md
        echo "[![Hugging Face Spaces](https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue)](https://huggingface.co/spaces/${{ env.HF_SPACE }})" >> README.md
        echo "" >> README.md
        echo "🔗 [Open in Spaces]($SPACE_URL)" >> README.md
        
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add README.md
        git commit -m "docs: Update README with Hugging Face Space URL" || echo "No changes to commit"
        git push || echo "No changes to push"
